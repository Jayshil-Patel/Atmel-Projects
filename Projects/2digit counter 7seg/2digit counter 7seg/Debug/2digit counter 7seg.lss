
2digit counter 7seg.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000284  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000284  00000318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006c  0080006c  00000324  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000324  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  000009f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000c0  00000000  00000000  00000a78  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006b2  00000000  00000000  00000b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000186  00000000  00000000  000011ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c7  00000000  00000000  00001370  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001838  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000125  00000000  00000000  0000185c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000118  00000000  00000000  00001981  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e8       	ldi	r30, 0x84	; 132
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 37       	cpi	r26, 0x73	; 115
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 40 01 	jmp	0x280	; 0x280 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
	static int i=0,j=0;
	unsigned char k,z,start_for=0,start_rev=99;

int main(void)
{
	DDRB=0xff;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	87 bb       	out	0x17, r24	; 23
	DDRC|=0x03;
  96:	84 b3       	in	r24, 0x14	; 20
  98:	83 60       	ori	r24, 0x03	; 3
  9a:	84 bb       	out	0x14, r24	; 20
	DDRA&=0x03;
  9c:	8a b3       	in	r24, 0x1a	; 26
  9e:	83 70       	andi	r24, 0x03	; 3
  a0:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x03;
  a2:	83 e0       	ldi	r24, 0x03	; 3
  a4:	8b bb       	out	0x1b, r24	; 27
			for (i=start_for;i<100;i++)
			{
			for (j=0;j<50;j++)
			{
				PORTC=0x01;
				PORTB=seg[i/10];
  a6:	ea e0       	ldi	r30, 0x0A	; 10
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	21 e6       	ldi	r18, 0x61	; 97
  ac:	30 e0       	ldi	r19, 0x00	; 0
			{
			for (i=start_for;i<100;i++)
			{
			for (j=0;j<50;j++)
			{
				PORTC=0x01;
  ae:	41 e0       	ldi	r20, 0x01	; 1
				PORTB=seg[i/10];
				_delay_ms(10);
				PORTC=0x02;
  b0:	c2 e0       	ldi	r28, 0x02	; 2
				PORTB=seg[i%10];
				_delay_ms(10);
				if ((PINA & 0x03)!=2)
				{
					start_for=i;
  b2:	0f e6       	ldi	r16, 0x6F	; 111
  b4:	10 e0       	ldi	r17, 0x00	; 0
						}
					}
				}
				
			}
			start_rev=99;
  b6:	d3 e6       	ldi	r29, 0x63	; 99
	DDRA&=0x03;
	PORTA=0x03;
    while (1)
    {
		startup:
		if((PINA & 0x03)==2)
  b8:	89 b3       	in	r24, 0x19	; 25
  ba:	83 70       	andi	r24, 0x03	; 3
  bc:	82 30       	cpi	r24, 0x02	; 2
  be:	09 f0       	breq	.+2      	; 0xc2 <main+0x30>
  c0:	5e c0       	rjmp	.+188    	; 0x17e <main+0xec>
		{
			while((PINA & 0x03)==2)
  c2:	89 b3       	in	r24, 0x19	; 25
  c4:	83 70       	andi	r24, 0x03	; 3
  c6:	82 30       	cpi	r24, 0x02	; 2
  c8:	09 f0       	breq	.+2      	; 0xcc <main+0x3a>
  ca:	59 c0       	rjmp	.+178    	; 0x17e <main+0xec>
			{
			for (i=start_for;i<100;i++)
  cc:	80 91 6c 00 	lds	r24, 0x006C
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 70 00 	sts	0x0070, r25
  d6:	80 93 6f 00 	sts	0x006F, r24
  da:	84 36       	cpi	r24, 0x64	; 100
  dc:	91 05       	cpc	r25, r1
  de:	0c f0       	brlt	.+2      	; 0xe2 <main+0x50>
  e0:	47 c0       	rjmp	.+142    	; 0x170 <main+0xde>
			{
			for (j=0;j<50;j++)
  e2:	10 92 72 00 	sts	0x0072, r1
  e6:	10 92 71 00 	sts	0x0071, r1
			{
				PORTC=0x01;
  ea:	45 bb       	out	0x15, r20	; 21
				PORTB=seg[i/10];
  ec:	80 91 6f 00 	lds	r24, 0x006F
  f0:	90 91 70 00 	lds	r25, 0x0070
  f4:	bf 01       	movw	r22, r30
  f6:	0e 94 19 01 	call	0x232	; 0x232 <__divmodhi4>
  fa:	62 0f       	add	r22, r18
  fc:	73 1f       	adc	r23, r19
  fe:	db 01       	movw	r26, r22
 100:	5c 91       	ld	r21, X
 102:	58 bb       	out	0x18, r21	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 104:	a3 ec       	ldi	r26, 0xC3	; 195
 106:	b9 e0       	ldi	r27, 0x09	; 9
 108:	11 97       	sbiw	r26, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <main+0x76>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x7c>
 10e:	00 00       	nop
				_delay_ms(10);
				PORTC=0x02;
 110:	c5 bb       	out	0x15, r28	; 21
				PORTB=seg[i%10];
 112:	82 0f       	add	r24, r18
 114:	93 1f       	adc	r25, r19
 116:	dc 01       	movw	r26, r24
 118:	8c 91       	ld	r24, X
 11a:	88 bb       	out	0x18, r24	; 24
 11c:	83 ec       	ldi	r24, 0xC3	; 195
 11e:	99 e0       	ldi	r25, 0x09	; 9
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0x8e>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x94>
 126:	00 00       	nop
				_delay_ms(10);
				if ((PINA & 0x03)!=2)
 128:	89 b3       	in	r24, 0x19	; 25
 12a:	83 70       	andi	r24, 0x03	; 3
 12c:	82 30       	cpi	r24, 0x02	; 2
 12e:	39 f0       	breq	.+14     	; 0x13e <main+0xac>
				{
					start_for=i;
 130:	d8 01       	movw	r26, r16
 132:	8c 91       	ld	r24, X
 134:	80 93 6c 00 	sts	0x006C, r24
					start_rev=1;
 138:	40 93 60 00 	sts	0x0060, r20
					goto startup;
 13c:	bd cf       	rjmp	.-134    	; 0xb8 <main+0x26>
		{
			while((PINA & 0x03)==2)
			{
			for (i=start_for;i<100;i++)
			{
			for (j=0;j<50;j++)
 13e:	80 91 71 00 	lds	r24, 0x0071
 142:	90 91 72 00 	lds	r25, 0x0072
 146:	01 96       	adiw	r24, 0x01	; 1
 148:	90 93 72 00 	sts	0x0072, r25
 14c:	80 93 71 00 	sts	0x0071, r24
 150:	82 33       	cpi	r24, 0x32	; 50
 152:	91 05       	cpc	r25, r1
 154:	54 f2       	brlt	.-108    	; 0xea <main+0x58>
		startup:
		if((PINA & 0x03)==2)
		{
			while((PINA & 0x03)==2)
			{
			for (i=start_for;i<100;i++)
 156:	80 91 6f 00 	lds	r24, 0x006F
 15a:	90 91 70 00 	lds	r25, 0x0070
 15e:	01 96       	adiw	r24, 0x01	; 1
 160:	90 93 70 00 	sts	0x0070, r25
 164:	80 93 6f 00 	sts	0x006F, r24
 168:	84 36       	cpi	r24, 0x64	; 100
 16a:	91 05       	cpc	r25, r1
 16c:	0c f4       	brge	.+2      	; 0x170 <main+0xde>
 16e:	b9 cf       	rjmp	.-142    	; 0xe2 <main+0x50>
					start_rev=1;
					goto startup;
				}
			}
			}
			start_for=0;
 170:	10 92 6c 00 	sts	0x006C, r1
    while (1)
    {
		startup:
		if((PINA & 0x03)==2)
		{
			while((PINA & 0x03)==2)
 174:	89 b3       	in	r24, 0x19	; 25
 176:	83 70       	andi	r24, 0x03	; 3
 178:	82 30       	cpi	r24, 0x02	; 2
 17a:	09 f4       	brne	.+2      	; 0x17e <main+0xec>
 17c:	a7 cf       	rjmp	.-178    	; 0xcc <main+0x3a>
			}
			}
			start_for=0;
			}			
		}
		if((PINA & 0x03)==1)
 17e:	89 b3       	in	r24, 0x19	; 25
 180:	83 70       	andi	r24, 0x03	; 3
 182:	81 30       	cpi	r24, 0x01	; 1
 184:	09 f0       	breq	.+2      	; 0x188 <main+0xf6>
 186:	98 cf       	rjmp	.-208    	; 0xb8 <main+0x26>
 188:	4c c0       	rjmp	.+152    	; 0x222 <main+0x190>
		{
			while((PINA & 0x03)==1)
			{
				for (i=start_rev;i>-1;i--)
 18a:	80 91 60 00 	lds	r24, 0x0060
 18e:	80 93 6f 00 	sts	0x006F, r24
 192:	10 92 70 00 	sts	0x0070, r1
				{
					for (j=0;j<50;j++)
 196:	10 92 72 00 	sts	0x0072, r1
 19a:	10 92 71 00 	sts	0x0071, r1
					{
						PORTC=0x01;
 19e:	45 bb       	out	0x15, r20	; 21
						PORTB=seg[i/10];
 1a0:	80 91 6f 00 	lds	r24, 0x006F
 1a4:	90 91 70 00 	lds	r25, 0x0070
 1a8:	bf 01       	movw	r22, r30
 1aa:	0e 94 19 01 	call	0x232	; 0x232 <__divmodhi4>
 1ae:	62 0f       	add	r22, r18
 1b0:	73 1f       	adc	r23, r19
 1b2:	db 01       	movw	r26, r22
 1b4:	5c 91       	ld	r21, X
 1b6:	58 bb       	out	0x18, r21	; 24
 1b8:	a3 ec       	ldi	r26, 0xC3	; 195
 1ba:	b9 e0       	ldi	r27, 0x09	; 9
 1bc:	11 97       	sbiw	r26, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <main+0x12a>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x130>
 1c2:	00 00       	nop
						_delay_ms(10);
						PORTC=0x02;
 1c4:	c5 bb       	out	0x15, r28	; 21
						PORTB=seg[i%10];
 1c6:	82 0f       	add	r24, r18
 1c8:	93 1f       	adc	r25, r19
 1ca:	dc 01       	movw	r26, r24
 1cc:	8c 91       	ld	r24, X
 1ce:	88 bb       	out	0x18, r24	; 24
 1d0:	83 ec       	ldi	r24, 0xC3	; 195
 1d2:	99 e0       	ldi	r25, 0x09	; 9
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <main+0x142>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <main+0x148>
 1da:	00 00       	nop
						_delay_ms(10);
						if ((PINA & 0x03)!=1)
 1dc:	89 b3       	in	r24, 0x19	; 25
 1de:	83 70       	andi	r24, 0x03	; 3
 1e0:	81 30       	cpi	r24, 0x01	; 1
 1e2:	39 f0       	breq	.+14     	; 0x1f2 <main+0x160>
						{
							start_for=i;
 1e4:	d8 01       	movw	r26, r16
 1e6:	8c 91       	ld	r24, X
 1e8:	80 93 6c 00 	sts	0x006C, r24
							start_rev=1;
 1ec:	40 93 60 00 	sts	0x0060, r20
							goto startup;
 1f0:	63 cf       	rjmp	.-314    	; 0xb8 <main+0x26>
		{
			while((PINA & 0x03)==1)
			{
				for (i=start_rev;i>-1;i--)
				{
					for (j=0;j<50;j++)
 1f2:	80 91 71 00 	lds	r24, 0x0071
 1f6:	90 91 72 00 	lds	r25, 0x0072
 1fa:	01 96       	adiw	r24, 0x01	; 1
 1fc:	90 93 72 00 	sts	0x0072, r25
 200:	80 93 71 00 	sts	0x0071, r24
 204:	82 33       	cpi	r24, 0x32	; 50
 206:	91 05       	cpc	r25, r1
 208:	54 f2       	brlt	.-108    	; 0x19e <main+0x10c>
		}
		if((PINA & 0x03)==1)
		{
			while((PINA & 0x03)==1)
			{
				for (i=start_rev;i>-1;i--)
 20a:	80 91 6f 00 	lds	r24, 0x006F
 20e:	90 91 70 00 	lds	r25, 0x0070
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	90 93 70 00 	sts	0x0070, r25
 218:	80 93 6f 00 	sts	0x006F, r24
 21c:	99 23       	and	r25, r25
 21e:	0c f0       	brlt	.+2      	; 0x222 <main+0x190>
 220:	ba cf       	rjmp	.-140    	; 0x196 <main+0x104>
			start_for=0;
			}			
		}
		if((PINA & 0x03)==1)
		{
			while((PINA & 0x03)==1)
 222:	89 b3       	in	r24, 0x19	; 25
 224:	83 70       	andi	r24, 0x03	; 3
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	09 f4       	brne	.+2      	; 0x22c <main+0x19a>
 22a:	af cf       	rjmp	.-162    	; 0x18a <main+0xf8>
						}
					}
				}
				
			}
			start_rev=99;
 22c:	d0 93 60 00 	sts	0x0060, r29
 230:	43 cf       	rjmp	.-378    	; 0xb8 <main+0x26>

00000232 <__divmodhi4>:
 232:	97 fb       	bst	r25, 7
 234:	09 2e       	mov	r0, r25
 236:	07 26       	eor	r0, r23
 238:	0a d0       	rcall	.+20     	; 0x24e <__divmodhi4_neg1>
 23a:	77 fd       	sbrc	r23, 7
 23c:	04 d0       	rcall	.+8      	; 0x246 <__divmodhi4_neg2>
 23e:	0c d0       	rcall	.+24     	; 0x258 <__udivmodhi4>
 240:	06 d0       	rcall	.+12     	; 0x24e <__divmodhi4_neg1>
 242:	00 20       	and	r0, r0
 244:	1a f4       	brpl	.+6      	; 0x24c <__divmodhi4_exit>

00000246 <__divmodhi4_neg2>:
 246:	70 95       	com	r23
 248:	61 95       	neg	r22
 24a:	7f 4f       	sbci	r23, 0xFF	; 255

0000024c <__divmodhi4_exit>:
 24c:	08 95       	ret

0000024e <__divmodhi4_neg1>:
 24e:	f6 f7       	brtc	.-4      	; 0x24c <__divmodhi4_exit>
 250:	90 95       	com	r25
 252:	81 95       	neg	r24
 254:	9f 4f       	sbci	r25, 0xFF	; 255
 256:	08 95       	ret

00000258 <__udivmodhi4>:
 258:	aa 1b       	sub	r26, r26
 25a:	bb 1b       	sub	r27, r27
 25c:	51 e1       	ldi	r21, 0x11	; 17
 25e:	07 c0       	rjmp	.+14     	; 0x26e <__udivmodhi4_ep>

00000260 <__udivmodhi4_loop>:
 260:	aa 1f       	adc	r26, r26
 262:	bb 1f       	adc	r27, r27
 264:	a6 17       	cp	r26, r22
 266:	b7 07       	cpc	r27, r23
 268:	10 f0       	brcs	.+4      	; 0x26e <__udivmodhi4_ep>
 26a:	a6 1b       	sub	r26, r22
 26c:	b7 0b       	sbc	r27, r23

0000026e <__udivmodhi4_ep>:
 26e:	88 1f       	adc	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	5a 95       	dec	r21
 274:	a9 f7       	brne	.-22     	; 0x260 <__udivmodhi4_loop>
 276:	80 95       	com	r24
 278:	90 95       	com	r25
 27a:	bc 01       	movw	r22, r24
 27c:	cd 01       	movw	r24, r26
 27e:	08 95       	ret

00000280 <_exit>:
 280:	f8 94       	cli

00000282 <__stop_program>:
 282:	ff cf       	rjmp	.-2      	; 0x282 <__stop_program>
